'use client'

import { useRouter } from 'next/navigation'
import { 
  Users, Phone, Mail, Calendar, Search, Bell,
  Target, DollarSign, Activity, Filter,
  UserPlus, MessageSquare, Eye, Edit3, FileText
} from 'lucide-react'
import { Button } from '@/components/ui/button'
import { Badge } from '@/components/ui/badge'
import { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar'
import { Input } from '@/components/ui/input'
import {
  DropdownMenu,
  DropdownMenuContent,
  DropdownMenuItem,
  DropdownMenuLabel,
  DropdownMenuSeparator,
  DropdownMenuTrigger,
} from '@/components/ui/dropdown-menu'
import {
  Card,
  CardContent,
  CardDescription,
  CardHeader,
  CardTitle,
} from '@/components/ui/card'
import { useAuth } from '@/contexts/AuthContext'
import { useEffect } from 'react'



const statsCards = [
  { 
    title: 'Total Leads', 
    value: '2,847', 
    change: '+12%',
    trend: 'up',
    description: 'vs last month', 
    icon: Users,
    color: 'bg-gradient-to-r from-blue-500 to-blue-600',
    lightColor: 'bg-blue-50',
    textColor: 'text-blue-600'
  },
  { 
    title: 'Conversion Rate', 
    value: '24.8%', 
    change: '+5.2%',
    trend: 'up',
    description: 'vs last month', 
    icon: Target,
    color: 'bg-gradient-to-r from-green-500 to-green-600',
    lightColor: 'bg-green-50',
    textColor: 'text-green-600'
  },
  { 
    title: 'Revenue', 
    value: '$127,500', 
    change: '+18%',
    trend: 'up',
    description: 'vs last month', 
    icon: DollarSign,
    color: 'bg-gradient-to-r from-blue-500 to-blue-600',
    lightColor: 'bg-blue-50',
    textColor: 'text-blue-600'
  },
  { 
    title: 'Active Deals', 
    value: '156', 
    change: '-2%',
    trend: 'down',
    description: 'vs last month', 
    icon: Activity,
    color: 'bg-gradient-to-r from-orange-500 to-orange-600',
    lightColor: 'bg-orange-50',
    textColor: 'text-orange-600'
  },
]

const recentLeads = [
  { 
    id: 1, 
    name: 'Sarah Johnson', 
    company: 'TechCorp Solutions', 
    email: 'sarah@techcorp.com',
    phone: '+1 (555) 0123',
    status: 'hot', 
    value: '$45,000',
    source: 'Website',
    time: '2 mins ago',
    avatar: 'SJ'
  },
  { 
    id: 2, 
    name: 'Michael Chen', 
    company: 'Digital Innovations', 
    email: 'mike@digital-inn.com',
    phone: '+1 (555) 0124',
    status: 'warm', 
    value: '$32,500',
    source: 'LinkedIn',
    time: '15 mins ago',
    avatar: 'MC'
  },
  { 
    id: 3, 
    name: 'Emily Rodriguez', 
    company: 'StartUp Hub', 
    email: 'emily@startuphub.io',
    phone: '+1 (555) 0125',
    status: 'cold', 
    value: '$18,000',
    source: 'Email Campaign',
    time: '1 hour ago',
    avatar: 'ER'
  },
  { 
    id: 4, 
    name: 'David Wilson', 
    company: 'Enterprise Systems', 
    email: 'david@entsys.com',
    phone: '+1 (555) 0126',
    status: 'converted', 
    value: '$75,000',
    source: 'Referral',
    time: '2 hours ago',
    avatar: 'DW'
  },
]

const todayActivities = [
  { id: 1, type: 'call', title: 'Call with Sarah Johnson', time: '10:00 AM', status: 'upcoming' },
  { id: 2, type: 'meeting', title: 'Demo for TechCorp', time: '2:00 PM', status: 'upcoming' },
  { id: 3, type: 'email', title: 'Follow-up with Michael Chen', time: '4:30 PM', status: 'completed' },
  { id: 4, type: 'call', title: 'Discovery call with Emily', time: '5:00 PM', status: 'upcoming' },
]

export default function DashboardPage() {
  const { user, loading, signOut } = useAuth()
  const router = useRouter()

  useEffect(() => {
    if (!loading && !user) {
      router.push('/login')
    }
  }, [user, loading, router])

  const handleSignOut = async () => {
    await signOut()
    router.push('/login')
  }

  if (loading) {
    return (
      <div className="flex items-center justify-center h-screen">
        <div className="text-lg">Loading...</div>
      </div>
    )
  }

  if (!user) {
    return null
  }

  const userEmail = user.email || 'user@example.com'
  const userName = user.user_metadata?.full_name || userEmail.split('@')[0]

  return (
    <div>
      {/* Enhanced Header */}
      <div className="bg-white border-b border-slate-200 px-8 py-6 shadow-sm">
        <div className="flex flex-col md:flex-row md:items-center justify-between space-y-4 md:space-y-0">
          <div>
            <h1 className="text-3xl font-bold text-slate-900">Dashboard Overview</h1>
            <p className="text-slate-600 mt-1">Welcome back, {userName}! Here's your sales performance today.</p>
          </div>
          <div className="flex items-center space-x-4">
            <div className="relative">
              <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 text-slate-400 h-4 w-4" />
              <Input 
                placeholder="Search leads, companies..." 
                className="pl-10 w-64 bg-slate-50 border-slate-200"
              />
            </div>
            <Button variant="outline" size="sm">
              <Bell className="w-4 h-4 mr-2" />
              <Badge variant="destructive" className="w-5 h-5 text-xs p-0 ml-1">3</Badge>
            </Button>
            <Badge variant="outline" className="bg-green-50 text-green-700 border-green-200">
              <div className="w-2 h-2 bg-green-500 rounded-full mr-2"></div>
              System Online
            </Badge>
          </div>
        </div>
      </div>

      <div className="p-8 space-y-8">
          {/* Enhanced Stats Cards */}
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
            {statsCards.map((stat, index) => (
              <Card key={index} className="relative overflow-hidden border-0 shadow-lg hover:shadow-xl transition-all duration-300 animate-slide-in" style={{ animationDelay: `${index * 100}ms` }}>
                <CardContent className="p-6">
                  <div className="flex items-center justify-between mb-4">
                    <div className={`w-12 h-12 ${stat.lightColor} rounded-xl flex items-center justify-center`}>
                      <stat.icon className={`w-6 h-6 ${stat.textColor}`} />
                    </div>
                    <Badge variant={stat.trend === 'up' ? 'default' : 'secondary'} className="text-xs">
                      {stat.change}
                    </Badge>
                  </div>
                  <div>
                    <p className="text-sm font-medium text-slate-600 mb-1">{stat.title}</p>
                    <p className="text-3xl font-bold text-slate-900">{stat.value}</p>
                    <p className="text-xs text-slate-500 mt-1">{stat.description}</p>
                  </div>
                  <div className={`absolute bottom-0 left-0 w-full h-1 ${stat.color}`}></div>
                </CardContent>
              </Card>
            ))}
          </div>

          {/* Main Dashboard Grid */}
          <div className="grid grid-cols-1 lg:grid-cols-3 gap-8">
            {/* Recent Leads */}
            <Card className="lg:col-span-2 border-0 shadow-lg">
              <CardHeader className="bg-slate-50 border-b border-slate-200">
                <div className="flex items-center justify-between">
                  <div>
                    <CardTitle className="text-xl">Recent Leads</CardTitle>
                    <CardDescription>Latest prospects and their status</CardDescription>
                  </div>
                  <Button variant="outline" size="sm">
                    <Filter className="w-4 h-4 mr-2" />
                    Filter
                  </Button>
                </div>
              </CardHeader>
              <CardContent className="p-0">
                <div className="space-y-0">
                  {recentLeads.map((lead, index) => (
                    <div key={lead.id} className="flex items-center justify-between p-6 border-b border-slate-100 hover:bg-slate-50 transition-colors group">
                      <div className="flex items-center space-x-4">
                        <Avatar className="h-12 w-12 ring-2 ring-slate-200">
                          <AvatarFallback className="bg-gradient-to-r from-blue-600 to-blue-500 text-white font-semibold">
                            {lead.avatar}
                          </AvatarFallback>
                        </Avatar>
                        <div className="space-y-1">
                          <p className="font-semibold text-slate-900">{lead.name}</p>
                          <p className="text-sm text-slate-600">{lead.company}</p>
                          <div className="flex items-center space-x-4 text-xs text-slate-500">
                            <span className="flex items-center">
                              <Mail className="w-3 h-3 mr-1" />
                              {lead.email}
                            </span>
                            <span className="flex items-center">
                              <Phone className="w-3 h-3 mr-1" />
                              {lead.phone}
                            </span>
                          </div>
                        </div>
                      </div>
                      <div className="flex items-center space-x-4">
                        <div className="text-right">
                          <Badge 
                            variant={
                              lead.status === 'hot' ? 'destructive' :
                              lead.status === 'warm' ? 'default' :
                              lead.status === 'converted' ? 'secondary' : 'outline'
                            }
                            className="mb-1"
                          >
                            {lead.status.toUpperCase()}
                          </Badge>
                          <p className="text-sm font-semibold text-slate-900">{lead.value}</p>
                          <p className="text-xs text-slate-500">{lead.source}</p>
                        </div>
                        <div className="opacity-0 group-hover:opacity-100 transition-opacity flex space-x-1">
                          <Button variant="ghost" size="sm">
                            <Eye className="w-4 h-4" />
                          </Button>
                          <Button variant="ghost" size="sm">
                            <Edit3 className="w-4 h-4" />
                          </Button>
                          <Button variant="ghost" size="sm">
                            <Phone className="w-4 h-4" />
                          </Button>
                        </div>
                      </div>
                    </div>
                  ))}
                </div>
              </CardContent>
            </Card>

            {/* Today's Activities & Quick Actions */}
            <div className="space-y-6">
              {/* Today's Schedule */}
              <Card className="border-0 shadow-lg">
                <CardHeader className="bg-slate-50 border-b border-slate-200">
                  <CardTitle className="text-lg flex items-center">
                    <Calendar className="w-5 h-5 mr-2 text-blue-600" />
                    Today's Schedule
                  </CardTitle>
                </CardHeader>
                <CardContent className="p-4">
                  <div className="space-y-3">
                    {todayActivities.map((activity) => (
                      <div key={activity.id} className="flex items-center space-x-3 p-3 rounded-lg bg-slate-50">
                        <div className={`w-2 h-2 rounded-full ${
                          activity.status === 'completed' ? 'bg-green-500' : 'bg-blue-500'
                        }`}></div>
                        <div className="flex-1">
                          <p className="text-sm font-medium text-slate-900">{activity.title}</p>
                          <p className="text-xs text-slate-500">{activity.time}</p>
                        </div>
                        {activity.type === 'call' && <Phone className="w-4 h-4 text-slate-400" />}
                        {activity.type === 'meeting' && <Users className="w-4 h-4 text-slate-400" />}
                        {activity.type === 'email' && <Mail className="w-4 h-4 text-slate-400" />}
                      </div>
                    ))}
                  </div>
                </CardContent>
              </Card>

              {/* Quick Actions */}
              <Card className="border-0 shadow-lg">
                <CardHeader className="bg-slate-50 border-b border-slate-200">
                  <CardTitle className="text-lg">Quick Actions</CardTitle>
                </CardHeader>
                <CardContent className="p-4 space-y-3">
                  <Button className="w-full justify-start bg-gradient-to-r from-blue-600 to-blue-500 hover:from-blue-700 hover:to-blue-600 text-white">
                    <UserPlus className="mr-3 h-4 w-4" />
                    Add New Lead
                  </Button>
                  <Button className="w-full justify-start" variant="outline">
                    <Phone className="mr-3 h-4 w-4" />
                    Make a Call
                  </Button>
                  <Button className="w-full justify-start" variant="outline">
                    <MessageSquare className="mr-3 h-4 w-4" />
                    Send Email
                  </Button>
                  <Button className="w-full justify-start" variant="outline">
                    <FileText className="mr-3 h-4 w-4" />
                    Generate Report
                  </Button>
                  <Button className="w-full justify-start" variant="outline">
                    <Calendar className="mr-3 h-4 w-4" />
                    Schedule Meeting
                  </Button>
                </CardContent>
              </Card>
            </div>
          </div>
        </div>
      </div>
    </div>
  )
}
