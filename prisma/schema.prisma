generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  email       String        @unique
  name        String
  companyId   Int?
  createdAt   DateTime      @default(now())
  password    String
  updatedAt   DateTime      @updatedAt
  id          Int           @id @default(autoincrement())
  role        UserRole      @default(user)
  userKodeAds UserKodeAds[]

  @@map("users")
}

model Layanan {
  id                     Int                      @id @default(autoincrement())
  nama                   String                   @unique
  createdAt              DateTime                 @default(now())
  updatedAt              DateTime                 @updatedAt
  konversi_customer_item konversi_customer_item[]
  produk                 Produk[]

  @@map("layanan")
}

model Produk {
  id                     Int                      @id @default(autoincrement())
  nama                   String
  deskripsi              String?
  layananId              Int
  createdAt              DateTime                 @default(now())
  updatedAt              DateTime                 @updatedAt
  konversi_customer_item konversi_customer_item[]
  layanan                Layanan                  @relation(fields: [layananId], references: [id], onDelete: Cascade)

  @@map("produk")
}

model KodeAds {
  id          Int           @id @default(autoincrement())
  kode        String        @unique
  status      String        @default("aktif")
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  userKodeAds UserKodeAds[]
  adsBudget   AdsBudget[]

  @@map("kode_ads")
}

model AdsBudget {
  id            Int      @id @default(autoincrement())
  kodeAdsId     Int
  sumberLeadsId Int
  budget        Float    @default(0)
  spent         Float    @default(0)
  periode       String   // Format: "YYYY-MM" untuk tracking bulanan
  createdBy     String?
  updatedBy     String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  kodeAds       KodeAds  @relation(fields: [kodeAdsId], references: [id], onDelete: Cascade)

  @@unique([kodeAdsId, sumberLeadsId, periode])
  @@map("ads_budget")
}

model UserKodeAds {
  id        Int      @id @default(autoincrement())
  userId    Int
  kodeAdsId Int
  createdAt DateTime @default(now())
  kodeAds   KodeAds  @relation(fields: [kodeAdsId], references: [id], onDelete: Cascade)
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, kodeAdsId])
  @@map("user_kode_ads")
}

model SumberLeads {
  id        Int      @id @default(autoincrement())
  nama      String   @unique
  deskripsi String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("sumber_leads")
}

model TipeFaskes {
  id        Int      @id @default(autoincrement())
  nama      String   @unique
  deskripsi String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("tipe_faskes")
}

model BukanLeads {
  id        Int      @id @default(autoincrement())
  nama      String   @unique
  deskripsi String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("bukan_leads")
}

model StatusLeads {
  id        Int      @id @default(autoincrement())
  nama      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("status_leads")
}

model Prospek {
  id                   Int                 @id @default(autoincrement())
  tanggalProspek       DateTime
  tanggalJadiLeads     DateTime?
  sumberLeadsId        Int
  kodeAdsId            Int?
  idAds                String?
  namaProspek          String
  noWhatsApp           String
  email                String?
  statusLeadsId        Int
  bukanLeadsId         Int?
  keteranganBukanLeads String?
  layananAssistId      String?
  namaFaskes           String?
  tipeFaskesId         Int?
  provinsi             String?
  kota                 String?
  picLeads             String
  keterangan           String?
  createdAt            DateTime            @default(now())
  updatedAt            DateTime            @updatedAt
  konversi_customer    konversi_customer[]

  @@map("prospek")
}

model konversi_customer {
  id                     Int                      @id @default(autoincrement())
  prospekId              Int
  tanggalKonversi        DateTime
  totalNilaiTransaksi    Float
  keterangan             String?
  createdAt              DateTime                 @default(now())
  updatedAt              DateTime
  prospek                Prospek                  @relation(fields: [prospekId], references: [id], onDelete: Cascade)
  konversi_customer_item konversi_customer_item[]
}

model konversi_customer_item {
  id                 Int               @id @default(autoincrement())
  konversiCustomerId Int
  layananId          Int
  produkId           Int
  nilaiTransaksi     Float
  durasiLangganan    Int
  tipeDurasi         String
  createdAt          DateTime          @default(now())
  updatedAt          DateTime
  konversi_customer  konversi_customer @relation(fields: [konversiCustomerId], references: [id], onDelete: Cascade)
  layanan            Layanan           @relation(fields: [layananId], references: [id])
  produk             Produk            @relation(fields: [produkId], references: [id])
}

enum UserRole {
  admin
  user
  cs_representative
  advertiser
  cs_support
  retention_specialist
}
